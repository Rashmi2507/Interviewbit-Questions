https://www.interviewbit.com/problems/minimum-difference-subsets/

public class Solution {
    public int solve(int[] A) {
        int sum = 0;
        for(int i=0; i<A.length; i++)
            sum += A[i];

        boolean[][] dp = new boolean[A.length+1][sum+1];
        for(int i=0; i<=A.length; i++)
        {
            for(int j=0; j<=sum; j++)
            {
                if(i==0 && j==0){
                    dp[i][j] = true;
                }
                else if(i==0){
                    dp[i][j] = false;
                }
                else if(j==0){
                    dp[i][j] = true;
                }
                else {
                    if(dp[i-1][j] == true)
                        dp[i][j] = true;
                    else
                    {
                        int val = A[i-1];
                        if(j >= val)
                        {
                            if(dp[i-1][j-val] == true)
                                dp[i][j] = true;
                        }
                    }
                }
            }
        }

        int minDiff = Integer.MAX_VALUE;
        int diff = 0;
        for(int i=0; i<=sum; i++)
        {
            if(dp[A.length][i] == true)
            {
                diff = Math.abs((sum-i) - i);
                minDiff = Math.min(minDiff, diff);
            }
        }
        return minDiff;
    }
}
